{"ast":null,"code":"var _jsxFileName = \"/Users/bizhan/Desktop/bailanysta_nfactorial/Web/frontend/src/pages/UserPage.jsx\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport api from '../api';\nimport Post from '../components/Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserPage() {\n  _s();\n  const {\n    id\n  } = useParams(); // userId из URL\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchUserAndPosts = async () => {\n      try {\n        // Получаем список всех пользователей и находим нужного\n        const users = await api.get('/users');\n        const targetUser = users.data.find(u => u._id === id);\n        setUser(targetUser);\n\n        // Получаем все посты и фильтруем\n        const res = await api.get('/posts');\n        const userPosts = res.data.filter(p => p.author._id === id);\n        setPosts(userPosts);\n      } catch (err) {\n        console.error(err);\n      }\n      setLoading(false);\n    };\n    fetchUserAndPosts();\n  }, [id]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8 text-gray-500\",\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, this);\n  if (!user) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-8 text-red-500\",\n    children: \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: [\"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C: \", user.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"\\u041F\\u043E\\u0441\\u0442\\u044B:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-gray-500\",\n      children: \"\\u041D\\u0435\\u0442 \\u043E\\u043F\\u0443\\u0431\\u043B\\u0438\\u043A\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u043E\\u0441\\u0442\\u043E\\u0432.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 27\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(UserPage, \"NUZVkz7bePmSXd3JlrzvXKDSHxo=\", false, function () {\n  return [useParams];\n});\n_c = UserPage;\nvar _c;\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["useParams","useEffect","useState","api","Post","jsxDEV","_jsxDEV","UserPage","_s","id","user","setUser","posts","setPosts","loading","setLoading","fetchUserAndPosts","users","get","targetUser","data","find","u","_id","res","userPosts","filter","p","author","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","username","length","map","post","_c","$RefreshReg$"],"sources":["/Users/bizhan/Desktop/bailanysta_nfactorial/Web/frontend/src/pages/UserPage.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport api from '../api';\nimport Post from '../components/Post';\n\nexport default function UserPage() {\n  const { id } = useParams(); // userId из URL\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchUserAndPosts = async () => {\n      try {\n        // Получаем список всех пользователей и находим нужного\n        const users = await api.get('/users');\n        const targetUser = users.data.find(u => u._id === id);\n        setUser(targetUser);\n\n        // Получаем все посты и фильтруем\n        const res = await api.get('/posts');\n        const userPosts = res.data.filter(p => p.author._id === id);\n        setPosts(userPosts);\n      } catch (err) {\n        console.error(err);\n      }\n      setLoading(false);\n    };\n\n    fetchUserAndPosts();\n  }, [id]);\n\n  if (loading) return <div className=\"text-center mt-8 text-gray-500\">Загрузка...</div>;\n  if (!user) return <div className=\"text-center mt-8 text-red-500\">Пользователь не найден</div>;\n\n  return (\n    <div className=\"max-w-2xl mx-auto\">\n      <h2 className=\"text-3xl font-bold mb-6\">Профиль: {user.username}</h2>\n      <h3 className=\"text-xl font-semibold mb-4\">Посты:</h3>\n      {posts.length === 0 ? (\n        <div className=\"text-gray-500\">Нет опубликованных постов.</div>\n      ) : (\n        posts.map(post => <Post key={post._id} post={post} />)\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}